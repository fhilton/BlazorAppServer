name: Package Website

on:
  push:
    branches:
      - master

env:
    PACKAGE_PREFIX: 2020.1.1
    OCTOPUS_PROJECT_NAME: GitHubActionsWithBlazor
    OCTOPUS_SPACE_NAME: Default
    OCTOPUS_ENVIRONMENT_NAME: DevLaptop
jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      
#    - name: Set version
#      id: set-version
#      run: echo "PACKAGE_VERSION=${env:PACKAGE_PREFIX}.${env:GITHUB_RUN_NUMBER}" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
#     shell: powershell
    
    - name: Make package directories
      run: New-Item "$PSScriptRoot\packagesoutput\" -ItemType Directory -Force
      shell: powershell
    
    - name: Install Octopus CLI
      run: choco install octopustools -y
      shell: powershell
      
    - name: Build and Package Website
      run: dotnet publish ./BlazorAppServer/BlazorAppServer.csproj --output "$PSScriptRoot\packagesoutput\BlazorAppServer" --configuration Release
      shell: powershell

    - name: Package and Push to Octopus
      env:
        OCTOPUS_URL: ${{ secrets.OCTOPUS_SERVER }}
        OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_APIKEY }}  
      run: |
        octo pack --id="BlazorAppServer" --format="Zip" --version="${env:GITHUB_RUN_NUMBER}" --basePath="$PSScriptRoot\packagesoutput\BlazorAppServer" --outFolder="packages"

        octo push --package="packages\BlazorAppServer.${env:GITHUB_RUN_NUMBER}.zip" --server="${env:OCTOPUS_URL}" --apiKey="${env:OCTOPUS_API_KEY}"

#    - name: Create and Deploy Release
#      env:
#        OCTOPUS_URL: ${{ secrets.OCTOPUS_SERVER }}
#        OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_APIKEY }} 
#      run: octo create-release --project="$OCTOPUS_PROJECT_NAME" --packageVersion="${env:GITHUB_RUN_NUMBER}" --releaseNumber="${env:GITHUB_RUN_NUMBER}" --server="${env:OCTOPUS_URL}" --apiKey="${env:OCTOPUS_API_KEY}" --space="${env:OCTOPUS_SPACE_NAME}" --deployTo="${env:OCTOPUS_ENVIRONMENT_NAME}"
